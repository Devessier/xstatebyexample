---
import "../index.css";
import { ViewTransitions } from "astro:transitions";
import { getImage } from "astro:assets";
import faviconSrc from "../assets/favicon/favicon.png";
import faviconSvgSrc from "../assets/favicon/favicon.svg";
import ogImageSrc from "../assets/og/landing-page.png";
import { css } from "../../styled-system/css";
import { grid, hstack } from "../../styled-system/patterns";
import AppGithubIcon from "../components/icons/AppGithubIcon.tsx";
import AppTwitterIcon from "../components/icons/AppTwitterIcon.tsx";
import AppMailIcon from "../components/icons/AppMailIcon.tsx";
import { TheMastHead } from "../components/TheMastHead.tsx";

interface Props {
  title: string;
  description?: string;
  ogType?: "website" | "article";
}

const {
  title,
  description = "Learn XState from real examples accompanied by interactive demos.",
  ogType = "article",
} = Astro.props;

const pathname = Astro.url.pathname.endsWith("/")
  ? Astro.url.pathname
  : Astro.url.pathname + "/";
const canonicalURL = new URL(pathname, Astro.site);

const appleTouchIcon = await getImage({
  src: faviconSrc,
  width: 180,
  height: 180,
  format: "png",
});
const faviconSvg = await getImage({ src: faviconSvgSrc, format: "svg" });

const ogImage = await getImage({ src: ogImageSrc, format: "png" });
const ogImageAlt =
  "XState by Example - Learn XState from real examples with interactive demos.";

const contacts: Array<{
  href: string;
  alt: string;
  icon: "github" | "twitter" | "email";
  hideOnHeader?: boolean;
}> = [
  {
    href: "https://github.com/Devessier/xstatebyexample",
    alt: "View on GitHub",
    icon: "github",
  },
  {
    href: "https://twitter.com/BDevessier",
    alt: "Follow on Twitter",
    icon: "twitter",
  },
  {
    href: "mailto:baptiste@devessier.fr",
    alt: "Send an email",
    icon: "email",
    hideOnHeader: true,
  },
];
---

<!doctype html>
<html lang="en" class={css({ height: "full" })}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />

    <!-- Page Metadata -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />
    <meta name="theme-color" content="#fff" />

    <!-- Favicons -->
    <!-- Thanks to https://kremalicious.com/favicon-generation-with-astro/ -->
    <link rel="icon" href="/favicon.ico" sizes="32x32" />
    <link rel="icon" href={faviconSvg.src} type="image/svg+xml" />
    <link rel="apple-touch-icon" href={appleTouchIcon.src} />

    <!-- OpenGraph Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content={ogType} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:locale" content="en" />
    <meta property="og:site_name" content="XState by Example" />
    <meta property="og:image" content={ogImage.src} />
    <meta property="og:image:alt" content={ogImageAlt} />

    <!-- Twitter Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:site" content="BDevessier" />
    <meta name="twitter:image" content={ogImage.src} />
    <meta name="twitter:image:alt" content={ogImageAlt} />

    <ViewTransitions />

    <script
      defer
      data-domain="xstatebyexample.com"
      src="https://plausible.io/js/script.js"></script>
  </head>
  <body class={css({ height: "full" })}>
    <div class={grid({ minH: "full", gridTemplateRows: "auto 1fr", gap: 0 })}>
      <TheMastHead client:idle {contacts} />

      <main class={css({ pt: "10", pb: "10", bg: "gray.50" })}>
        <slot />

        <div
          class={css({
            maxW: "3xl",
            mx: "auto",
            mt: { base: "20", sm: "24", lg: "32" },
            px: { base: "4", sm: "6", lg: "8" },
          })}
        >
          <div
            class={css({
              bg: "white",
              shadow: "lg",
              py: "4",
              px: "6",
              rounded: "lg",
            })}
          >
            <h2 class={css({ fontSize: "xl", fontWeight: "semibold" })}>
              Get news from XState by Example
            </h2>

            <p class={css({ mt: "4" })}>
              Sign up for the newsletter to be notified when more machines or an
              interactive tutorial are released. I respect your privacy and will
              only send emails once in a while.
            </p>

            <iframe
              scrolling="no"
              title="Subscribe to newsletter form"
              style="width: 100% !important; height:220px; border:1px #ccc solid !important"
              src="https://buttondown.email/xstate-by-example?as_embed=true"
              class={css({ mt: "4" })}></iframe>
          </div>
        </div>

        <footer
          class={css({
            maxW: "2xl",
            mx: "auto",
            mt: { base: "20", sm: "24", lg: "32" },
            px: { base: "4", sm: "6", lg: "8" },
            textAlign: "center",
            color: "gray.700",
            "& > p > a": {
              fontWeight: "semibold",
              textDecoration: "underline",
            },
          })}
        >
          <p>
            © {new Date().getFullYear()}
            <a href="https://baptiste.devessier.fr">Baptiste Devessier</a> — Made
            with <a href="https://stately.ai/docs/quick-start">XState</a>, <a
              href="https://astro.build/">Astro</a
            >,
            <a href="https://panda-css.com/">Panda CSS</a> and <a
              href="https://react.dev/">React</a
            >.
          </p>

          <p
            class={css({
              mt: "4",
            })}
          >
            <a href="https://xstate-catalogue.com/">XState Catalogue</a> is a significant
            source of inspiration and made me the XState developer I am today. I
            want to help XState newcomers, in turn. Shout-out to <a
              href="https://gobyexample.com/">Go by Example</a
            > for coining the expression.
          </p>

          <div
            class={hstack({
              gap: "6",
              justify: "center",
              mt: "6",
            })}
          >
            {
              contacts.map((contact) => (
                <a
                  href={contact.href}
                  target="_blank"
                  class={css({ cursor: "pointer" })}
                >
                  <span class={css({ srOnly: true })}>{contact.alt}</span>

                  {contact.icon === "email" ? (
                    <AppMailIcon
                      className={css({
                        w: "6",
                        h: "6",
                        color: { base: "gray.400", _hover: "gray.500" },
                      })}
                    />
                  ) : contact.icon === "twitter" ? (
                    <AppTwitterIcon
                      className={css({
                        w: "6",
                        h: "6",
                        color: { base: "gray.400", _hover: "gray.500" },
                      })}
                    />
                  ) : contact.icon === "github" ? (
                    <AppGithubIcon
                      className={css({
                        w: "6",
                        h: "6",
                        color: { base: "gray.400", _hover: "gray.500" },
                      })}
                    />
                  ) : null}
                </a>
              ))
            }
          </div>
        </footer>
      </main>
    </div>
  </body>
</html>
